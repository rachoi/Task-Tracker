[{"/Users/raymond/Desktop/task-tracker/frontend/src/index.js":"1","/Users/raymond/Desktop/task-tracker/frontend/src/App.js":"2","/Users/raymond/Desktop/task-tracker/frontend/src/reportWebVitals.js":"3","/Users/raymond/Desktop/task-tracker/frontend/src/Pages/HomePage.js":"4","/Users/raymond/Desktop/task-tracker/frontend/src/Pages/LoginPage.js":"5","/Users/raymond/Desktop/task-tracker/frontend/src/Pages/RegisterPage.js":"6","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js":"7","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Home.js":"8","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Login.js":"9","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Register.js":"10","/Users/raymond/Desktop/task-tracker/frontend/src/Components/AppBar.js":"11","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Table.js":"12","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Backdrop.js":"13","/Users/raymond/Desktop/Task-Tracker/frontend/src/index.js":"14","/Users/raymond/Desktop/Task-Tracker/frontend/src/reportWebVitals.js":"15","/Users/raymond/Desktop/Task-Tracker/frontend/src/App.js":"16","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Dashboard.js":"17","/Users/raymond/Desktop/Task-Tracker/frontend/src/Pages/HomePage.js":"18","/Users/raymond/Desktop/Task-Tracker/frontend/src/Pages/RegisterPage.js":"19","/Users/raymond/Desktop/Task-Tracker/frontend/src/Pages/LoginPage.js":"20","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/AppBar.js":"21","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Backdrop.js":"22","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Table.js":"23","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Home.js":"24","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Register.js":"25","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Login.js":"26","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/StopWatch.js":"27"},{"size":500,"mtime":1647930868033,"results":"28","hashOfConfig":"29"},{"size":1396,"mtime":1648116867747,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1647930868035,"results":"31","hashOfConfig":"29"},{"size":830,"mtime":1648008092877,"results":"32","hashOfConfig":"29"},{"size":837,"mtime":1648090386207,"results":"33","hashOfConfig":"29"},{"size":918,"mtime":1648008110562,"results":"34","hashOfConfig":"29"},{"size":2451,"mtime":1648182573811,"results":"35","hashOfConfig":"29"},{"size":951,"mtime":1648162398628,"results":"36","hashOfConfig":"29"},{"size":4282,"mtime":1648162342335,"results":"37","hashOfConfig":"29"},{"size":5384,"mtime":1648179840023,"results":"38","hashOfConfig":"29"},{"size":2438,"mtime":1648191207902,"results":"39","hashOfConfig":"29"},{"size":3085,"mtime":1648180776130,"results":"40","hashOfConfig":"29"},{"size":6287,"mtime":1648191275102,"results":"41","hashOfConfig":"29"},{"size":500,"mtime":1648193073216,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1648193073216,"results":"44","hashOfConfig":"43"},{"size":1396,"mtime":1648193073213,"results":"45","hashOfConfig":"43"},{"size":2407,"mtime":1650579795121,"results":"46","hashOfConfig":"43"},{"size":830,"mtime":1648193073215,"results":"47","hashOfConfig":"43"},{"size":918,"mtime":1648193073215,"results":"48","hashOfConfig":"43"},{"size":837,"mtime":1648193073215,"results":"49","hashOfConfig":"43"},{"size":2438,"mtime":1648193073213,"results":"50","hashOfConfig":"43"},{"size":5569,"mtime":1650580356841,"results":"51","hashOfConfig":"43"},{"size":3928,"mtime":1650582740486,"results":"52","hashOfConfig":"43"},{"size":951,"mtime":1648193073214,"results":"53","hashOfConfig":"43"},{"size":5384,"mtime":1648193073214,"results":"54","hashOfConfig":"43"},{"size":4282,"mtime":1648193073214,"results":"55","hashOfConfig":"43"},{"size":2690,"mtime":1650582574592,"results":"56","hashOfConfig":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"10fuxkb",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4etqs8",{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"117"},"/Users/raymond/Desktop/task-tracker/frontend/src/index.js",[],[],["150","151"],"/Users/raymond/Desktop/task-tracker/frontend/src/App.js",[],[],"/Users/raymond/Desktop/task-tracker/frontend/src/reportWebVitals.js",[],[],"/Users/raymond/Desktop/task-tracker/frontend/src/Pages/HomePage.js",["152","153"],[],"import axios from 'axios';\nimport React, {useEffect} from 'react';\nimport Home from \"../Components/Home.js\";\n\nconst HomePage = (props) => {\n    // const url = 'https://banking-system-rc.herokuapp.com';\n    const url = 'http://localhost:3000';\n    // const url = 'http://localhost:5000';\n  \n    useEffect( () => {\n      //if trying to access home page and we find a user, redirect back to dashboard\n    //   axios.get(`${url}/auth/user`)\n    //   .then(res => {\n    //     if(res.data) {\n    //         props.history.push(\"/dashboard\");\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n      \n    }, [props.history]); //empty array at the end makes it only run on mount and unmount \n  \n    return (\n      <div> \n        <Home/>\n      </div> \n    );\n  }\n  \n  export default HomePage;","/Users/raymond/Desktop/task-tracker/frontend/src/Pages/LoginPage.js",["154","155"],[],"import axios from 'axios';\nimport React, {useEffect} from 'react';\nimport Login from \"../Components/Login.js\";\n\nconst LoginPage = (props) => {\n    // const url = 'https://banking-system-rc.herokuapp.com';\n    const url = 'http://localhost:3000';\n    // const url = 'http://localhost:5000';\n  \n    useEffect( () => {\n      //if trying to access home page and we find a user, redirect back to dashboard\n    //   axios.get(`${url}/auth/user`)\n    //   .then(res => {\n    //     if(res.data) {\n    //         props.history.push(\"/dashboard\");\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n      \n    }, [props.history]); //empty array at the end makes it only run on mount and unmount \n    \n    return (\n      <div> \n        <Login/>\n      </div> \n    );\n  }\n  \n  export default LoginPage;","/Users/raymond/Desktop/task-tracker/frontend/src/Pages/RegisterPage.js",["156","157","158","159","160","161"],[],"import axios from 'axios';\nimport React, {useEffect} from 'react';\nimport { Routes, Route, Link, Navigate } from 'react-router-dom';\nimport Register from \"../Components/Register.js\";\n\nconst RegisterPage = (props) => {\n    // const url = 'https://banking-system-rc.herokuapp.com';\n    const url = 'http://localhost:3000';\n    // const url = 'http://localhost:5000';\n  \n    useEffect( () => {\n      //if trying to access home page and we find a user, redirect back to dashboard\n    //   axios.get(`${url}/auth/user`)\n    //   .then(res => {\n    //     if(res.data) {\n    //         props.history.push(\"/dashboard\");\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n      \n    }, [props.history]); //empty array at the end makes it only run on mount and unmount \n    \n    return (\n      <div> \n        <Register/>\n      </div> \n    );\n  }\n  \n  export default RegisterPage;","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js",["162","163","164"],[],"import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Table from './Table';\nimport Backdrop from './Backdrop';\n\n\n\nconst url = \"http://localhost:5000\";\n\n\nfunction ResponsiveDrawer(props) {\n\n    const mountedRef = useRef(true);\n    // const [loading, setLoading] = React.useState(true);\n    const [list, setList] = React.useState([]);\n    const navigate = useNavigate();\n    useEffect( () => {\n      //get user info\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          setList(res.data.completedTasks);\n          // console.log(\"Set list to: \" + JSON.stringify(res.data.completedTasks));\n          // console.log(\"set user to \" + JSON.stringify(res.data));\n\n          // setLoading(false);\n        }\n        else{\n            navigate(\"/\");\n        }\n      }).catch((err) => {\n        console.log(err);\n        // setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n\n\n  const handleSubmit = e => { \n\n  }    \n  \n  return (\n      <div>\n          <AppBar isLoggedIn={true}/> \n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"90px\", width:\"90%\", borderRadius: \"10px\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              {/* <Button onClick={addTask}>           \n                <AddIcon/>\n              </Button> */}\n              <Backdrop/>\n            </div>\n          </div>\n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width:\"90%\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              <Typography component=\"h1\" variant=\"h5\"sx={{margin:\"20px 0px\"}}>\n                Completed Tasks\n              </Typography>\n              <Divider/>\n              <Table list={list}/>     \n            </div>\n          </div>\n      </div>\n    )   \n}\n  \n  export default ResponsiveDrawer;","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Home.js",["165","166"],[],"import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst url = \"http://localhost:5000\";\n\n\nconst Home = () => {\n//   const classes = useStyles();\n  const mountedRef = useRef(true);\n    const [loading, setLoading] = React.useState(true);\n    const navigate = useNavigate();\n    useEffect( () => {\n      //get user info\n      // console.log(loading);\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          navigate(\"/dashboard\");\n        }\n        setLoading(false);\n      }).catch((err) => {\n        // not needed\n        console.log(err);\n        setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n\n  return (\n    <div>\n      <div>\n        <AppBar isLoggedIn={false}/> \n        \n      </div>\n    </div>\n    \n  );\n}\n\nexport default Home;","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Login.js",[],[],"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Register.js",[],[],"/Users/raymond/Desktop/task-tracker/frontend/src/Components/AppBar.js",[],[],"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Table.js",["167"],[],"import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport {useEffect} from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\n\n\n\nfunction createData(id, name, description, elapsedTime, date) {\n  return { id, name, description, elapsedTime, date };\n}\n\nlet rows = [\n];\n\nexport default function BasicTable(props) {\n    const [list, setList] = React.useState({});\n\n    useEffect( () => {\n        // console.log(\"Use effect in table\");\n        if(props.list.length > 0) {\n            // console.log(\"List: \" + props.list);\n            rows = [];\n            for(let i = 0; i < props.list.length; i++) {\n                let task = props.list[i];\n                const id = task.id;\n                const name = task.name;\n                const description = task.description;\n                const elapsedTime = task.elapsedTime;\n                const date = task.date;\n                // console.log(name);\n                // console.log(description);\n                // console.log(elapsedTime);\n                // console.log(date);\n                rows.push(createData(id, name, description, elapsedTime, date));\n            }\n            // setLoading(false);\n        }\n        setList(props.list);\n    },[props.list]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"right\">Task Name</TableCell>\n            <TableCell align=\"right\">Description</TableCell>\n            <TableCell align=\"right\">Elapsed Time</TableCell>\n            <TableCell align=\"right\">Date Completed</TableCell>\n            <TableCell align=\"right\"></TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell scope=\"string\" align=\"left\">\n                {row.id}\n              </TableCell>\n              <TableCell scope=\"string\" align=\"right\">\n                {row.name}\n              </TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.description}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.elapsedTime}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.date}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">\n                  <Button>\n                    <DeleteIcon sx={{color: 'black'}}/>\n                  </Button>\n                  \n              </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/raymond/Desktop/task-tracker/frontend/src/Components/Backdrop.js",["168","169"],[],"import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\n\n\nimport axios from 'axios';\n\n\nconst url = \"http://localhost:5000\";\n\n\nexport default function SimpleBackdrop() {\n  const [open, setOpen] = React.useState(false);\n  const [taskState, setTaskState] = React.useState(false); //false means not started, true means started\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [taskDesc, setTaskDesc] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const [totalSeconds, setTotalSeconds] = React.useState(0); //total seconds elapsed for a given task\n\n\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n\n  const onChangeTaskName = e => {\n    e.preventDefault();\n    const name = e.target.value;\n    setTaskName(name)\n  }\n\n  const onChangeTaskDesc = e => {\n    e.preventDefault();\n    const desc = e.target.value;\n    setTaskDesc(desc)\n  }\n\n  const reset = () => {\n      setError(\"\");\n      setTaskName(\"\");\n      setTaskDesc(\"\");\n      setStartTime(\"\");\n      setEndTime(\"\");\n      setTotalSeconds(0);\n  }\n  //closing menu\n  const handleClose = () => {\n    setOpen(false);\n    reset();\n  };\n  //toggling open\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const startTrack = (e) => {\n    if(taskName.length === 0) {\n        setError(\"Required to put a name for the task\");\n    }\n    else {\n        setTaskState(true);\n        let start = new Date().getTime();;\n        setStartTime(start);\n    }\n\n  }\n\n  const stopTrack = (e) => {\n    setTaskState(false);\n    let end = new Date().getTime();;\n    const seconds = (end-startTime)/1000;\n    const cur = totalSeconds + seconds; //adding total (so we can pause and continue for different times)\n    setTotalSeconds(cur);\n\n    const diff = new Date(seconds * 1000).toISOString().substr(11, 8); //hh:mm:ss\n    console.log(\"Current elapsed: \" + diff);\n    console.log(\"Total: \" + cur);\n    setEndTime(end);\n  }\n//reset values after adding\n\n  const addTask = (e) => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    today = mm + '/' + dd + '/' + yyyy;\n\n    const time = new Date(totalSeconds * 1000).toISOString().substr(11, 8)\n\n    const task = {\n      name: taskName,\n      description: taskDesc,\n      elapsedTime: time,\n      date: today\n    }\n    axios.post(`${url}/add`, task, {withCredentials: true}).then(\n      res => {\n        if(res.status >= 200 && res.status <= 299) {\n          console.log(res.data);\n          console.log(\"posted\");\n          handleClose();\n          window.location.reload(false);\n        }\n      }\n    ).catch((error) => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleToggle}><AddIcon/></Button>\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <div  style={{width: \"50%\", height: \"90%\", backgroundColor: \"white\"}}>\n\n            <div style={{display: \"flex\", justifyContent:\"flex-end\"}}>\n                <Button onClick={handleClose} sx={{color: \"black\"}}> <CloseIcon/> </Button>\n            </div>\n\n            <div style={{display: \"flex\", alignItems: \"center\", flexDirection:\"column\"}}> \n                <Typography component=\"h1\" variant=\"h5\" sx={{color: \"black\"}}>\n                    Create task\n                </Typography>\n                <Typography component=\"h1\" variant=\"h5\" sx={{color: \"red\"}}>\n                    {error}\n                </Typography>\n                <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n                    \n                    <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Task name\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    onChange={onChangeTaskName}\n                    value={taskName}\n                    autoFocus\n                    />\n                    <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    name=\"desciption\"\n                    label=\"Desciption\"\n                    type=\"desciption\"\n                    id=\"desciption\"\n                    autoComplete=\"task-desciption\"\n                    value={taskDesc}\n                    onChange={onChangeTaskDesc}\n                    />\n                    {taskState ?  \n                        <div style={{display: \"flex\", justifyContent:\"flex-end\"}}>\n                            <Button\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 }}\n                                onClick={stopTrack}\n                                >\n                                Stop\n                            </Button> \n                            \n                        </div>\n                        : \n                        <div style={{display: \"flex\", justifyContent:\"flex-end\"}}>\n                            <Button\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 }}\n                                onClick={startTrack}\n                                >\n                                Start\n                            </Button>\n\n                            <Button\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 , marginLeft: \"15px\"}}\n                                onClick={addTask}\n                                >\n                                Submit\n                            </Button> \n                        </div>\n                        \n                    }\n                </Box>\n            </div>\n        </div>\n      </Backdrop>\n    </div>\n  );\n}\n","/Users/raymond/Desktop/Task-Tracker/frontend/src/index.js",[],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/reportWebVitals.js",[],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/App.js",[],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Dashboard.js",["170","171"],[],"import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Table from './Table';\nimport Backdrop from './Backdrop';\n\n\n\nconst url = \"http://localhost:5000\";\n\n\nfunction ResponsiveDrawer(props) {\n\n    const mountedRef = useRef(true);\n    // const [loading, setLoading] = React.useState(true);\n    const [list, setList] = React.useState([]);\n    const navigate = useNavigate();\n    useEffect( () => {\n      //get user info\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          setList(res.data.completedTasks);\n          // console.log(\"Set list to: \" + JSON.stringify(res.data.completedTasks));\n          // console.log(\"set user to \" + JSON.stringify(res.data));\n\n          // setLoading(false);\n        }\n        else{\n            navigate(\"/\");\n        }\n      }).catch((err) => {\n        console.log(err);\n        // setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n\n  return (\n      <div>\n          <AppBar isLoggedIn={true}/> \n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"90px\", width:\"90%\", borderRadius: \"10px\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              {/* <Button onClick={addTask}>           \n                <AddIcon/>\n              </Button> */}\n              <Backdrop/>\n            </div>\n          </div>\n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width:\"90%\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              <Typography component=\"h1\" variant=\"h5\"sx={{margin:\"20px 0px\"}}>\n                Completed Tasks\n              </Typography>\n              <Divider/>\n              <Table list={list}/>     \n            </div>\n          </div>\n      </div>\n    )   \n}\n  \n  export default ResponsiveDrawer;",["172","173"],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Pages/HomePage.js",["174","175"],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Pages/RegisterPage.js",["176","177","178","179","180","181"],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Pages/LoginPage.js",["182","183"],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/AppBar.js",[],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Backdrop.js",["184","185","186"],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Table.js",["187"],[],"import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport {useEffect} from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\n\n\n\nfunction createData(id, name, description, elapsedTime, startTime, endTime) {\n  return { id, name, description, elapsedTime, startTime, endTime };\n}\n\nlet rows = [\n];\n\nconst msToHMS = ms => {\n   // 1- Convert to seconds:\n   var seconds = ms / 1000;\n\n   // 2- Extract hours:\n   var hours = parseInt(seconds / 3600); // 3600 seconds in 1 hour\n   seconds = parseInt(seconds % 3600); // extract the remaining seconds after extracting hours\n \n   // 3- Extract minutes:\n   var minutes = parseInt(seconds / 60); // 60 seconds in 1 minute\n \n   // 4- Keep only seconds not extracted to minutes:\n   seconds = parseInt(seconds % 60);\n \n   // 5 - Format so it shows a leading zero if needed\n   let hoursStr = (\"00\" + hours).slice(-2);\n   let minutesStr = (\"00\" + minutes).slice(-2);\n   let secondsStr = (\"00\" + seconds).slice(-2);\n \n   return hoursStr + \":\" + minutesStr + \":\" + secondsStr\n}\n\n\nexport default function BasicTable(props) {\n    const [list, setList] = React.useState({});\n\n    useEffect( () => {\n        // console.log(\"Use effect in table\");\n        if(props.list.length > 0) {\n            rows = [];\n            for(let i = 0; i < props.list.length; i++) {\n                let task = props.list[i];\n                const id = task.id;\n                const name = task.name;\n                const description = task.description;\n                const elapsedTime = msToHMS(task.elapsedTime);\n                const startTime = task.startTime;\n                const endTime = task.endTime\n    \n                rows.push(createData(id, name, description, elapsedTime, startTime, endTime));\n            }\n        }\n        setList(props.list);\n    },[props.list]);\n\n    const deleteOnClick = e => {\n      e.preventDefault();\n      console.log(\"Deleting\");\n    }\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"right\">Task Name</TableCell>\n            <TableCell align=\"right\">Description</TableCell>\n            <TableCell align=\"right\">Elapsed Time</TableCell>\n            <TableCell align=\"right\">Time Started</TableCell>\n            <TableCell align=\"right\">Time Completed</TableCell>\n            <TableCell align=\"right\"></TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell scope=\"string\" align=\"left\">\n                {row.id}\n              </TableCell>\n              <TableCell scope=\"string\" align=\"right\">\n                {row.name}\n              </TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.description}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.elapsedTime}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.startTime}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.endTime}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">\n                  <Button>\n                    <DeleteIcon onClick={deleteOnClick} sx={{color: 'black'}}/>\n                  </Button>\n                  \n              </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Home.js",["188","189"],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Register.js",[],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Login.js",[],[],"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/StopWatch.js",["190"],[],"import React from \"react\";\nimport './StopWatch.css'\n\nimport axios from 'axios';\nconst url = \"http://localhost:5000\";\n\nconst StopWatch = (props) => {\n  const [time, setTime] = React.useState(0);\n  const [timerOn, setTimerOn] = React.useState(false);\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [taskDesc, setTaskDesc] = React.useState(\"\");\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n\n\n\n  React.useEffect(() => {\n    let interval = null;\n    setTaskName(props.taskName);\n    setTaskDesc(props.taskDesc);\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else if (!timerOn) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  const handleSubmit = (e) => {\n    const task = {\n      name: taskName,\n      description: taskDesc,\n      elapsedTime: time,\n      startTime: startTime,\n      endTime: endTime\n    }\n    axios.post(`${url}/add`, task, {withCredentials: true}).then(\n      res => {\n        if(res.status >= 200 && res.status <= 299) {\n          console.log(res.data);\n          console.log(\"posted\");\n        //   handleClose();\n          window.location.reload(false);\n        }\n      }\n    ).catch((error) => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n\n    setTime(0);\n  }\n\n  const handleStart = e => {\n      setTimerOn(true);\n      setStartTime(new Date().toLocaleString());\n  }\n\n  const handleStop = e => {\n        setTimerOn(false);\n        setEndTime(new Date().toLocaleString());\n  }\n\n  return (\n    <div className=\"Timers\">\n      <h2>Stopwatch</h2>\n      <div id=\"display\">\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n      </div>\n\n      <div id=\"buttons\">\n        {!timerOn && time === 0 && (\n          <button style={{backgroundColor: \"rgb(51, 153, 255)\"}} onClick={handleStart}>Start</button>\n        )}\n\n        {timerOn && <button onClick={handleStop}>Stop</button>}\n\n        {!timerOn && time > 0 && (\n          <button style={{backgroundColor: \"rgb(51, 153, 255)\"}} onClick={() => setTimerOn(true)}>Resume</button>\n        )}\n        {!timerOn && time > 0 && (\n          <button onClick={() => setTime(0)}>Reset</button>\n        )}\n        {!timerOn && time > 0 && (\n          <button style={{backgroundColor: \"rgb(102, 255, 178)\", marginTop: \"10px\"}} onClick={handleSubmit}>Submit</button>\n        )}\n        \n      </div>\n    </div>\n  );\n};\n\nexport default StopWatch;",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"199","line":7,"column":11,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"199","line":7,"column":11,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"200","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":16},{"ruleId":"195","severity":1,"message":"201","line":3,"column":18,"nodeType":"197","messageId":"198","endLine":3,"endColumn":23},{"ruleId":"195","severity":1,"message":"202","line":3,"column":25,"nodeType":"197","messageId":"198","endLine":3,"endColumn":29},{"ruleId":"195","severity":1,"message":"203","line":3,"column":31,"nodeType":"197","messageId":"198","endLine":3,"endColumn":39},{"ruleId":"195","severity":1,"message":"199","line":8,"column":11,"nodeType":"197","messageId":"198","endLine":8,"endColumn":14},{"ruleId":"195","severity":1,"message":"204","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":43,"column":7,"nodeType":"207","endLine":43,"endColumn":9,"suggestions":"208"},{"ruleId":"195","severity":1,"message":"209","line":46,"column":9,"nodeType":"197","messageId":"198","endLine":46,"endColumn":21},{"ruleId":"195","severity":1,"message":"210","line":12,"column":12,"nodeType":"197","messageId":"198","endLine":12,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":31,"column":7,"nodeType":"207","endLine":31,"endColumn":9,"suggestions":"211"},{"ruleId":"195","severity":1,"message":"212","line":23,"column":12,"nodeType":"197","messageId":"198","endLine":23,"endColumn":16},{"ruleId":"195","severity":1,"message":"213","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":12},{"ruleId":"195","severity":1,"message":"214","line":29,"column":10,"nodeType":"197","messageId":"198","endLine":29,"endColumn":17},{"ruleId":"195","severity":1,"message":"204","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":43,"column":7,"nodeType":"207","endLine":43,"endColumn":9,"suggestions":"215"},{"ruleId":"191","replacedBy":"216"},{"ruleId":"193","replacedBy":"217"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"199","line":7,"column":11,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"200","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":16},{"ruleId":"195","severity":1,"message":"201","line":3,"column":18,"nodeType":"197","messageId":"198","endLine":3,"endColumn":23},{"ruleId":"195","severity":1,"message":"202","line":3,"column":25,"nodeType":"197","messageId":"198","endLine":3,"endColumn":29},{"ruleId":"195","severity":1,"message":"203","line":3,"column":31,"nodeType":"197","messageId":"198","endLine":3,"endColumn":39},{"ruleId":"195","severity":1,"message":"199","line":8,"column":11,"nodeType":"197","messageId":"198","endLine":8,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"199","line":7,"column":11,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"213","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":12},{"ruleId":"195","severity":1,"message":"196","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":13},{"ruleId":"195","severity":1,"message":"199","line":17,"column":7,"nodeType":"197","messageId":"198","endLine":17,"endColumn":10},{"ruleId":"195","severity":1,"message":"212","line":46,"column":12,"nodeType":"197","messageId":"198","endLine":46,"endColumn":16},{"ruleId":"195","severity":1,"message":"210","line":12,"column":12,"nodeType":"197","messageId":"198","endLine":12,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":31,"column":7,"nodeType":"207","endLine":31,"endColumn":9,"suggestions":"218"},{"ruleId":"205","severity":1,"message":"219","line":30,"column":6,"nodeType":"207","endLine":30,"endColumn":15,"suggestions":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'handleSubmit' is assigned a value but never used.","'loading' is assigned a value but never used.",["224"],"'list' is assigned a value but never used.","'Grid' is defined but never used.","'endTime' is assigned a value but never used.",["225"],["221"],["222"],["226"],"React Hook React.useEffect has missing dependencies: 'props.taskDesc' and 'props.taskName'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'props.taskName', you can also switch to useReducer instead of useState and read 'props.taskName' in the reducer.",["227"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"228","fix":"230"},{"desc":"228","fix":"231"},{"desc":"228","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [navigate]",{"range":"235","text":"236"},{"range":"237","text":"236"},{"range":"238","text":"236"},{"range":"239","text":"236"},"Update the dependencies array to be: [props.taskDesc, props.taskName, timerOn]",{"range":"240","text":"241"},[1218,1220],"[navigate]",[808,810],[1218,1220],[808,810],[813,822],"[props.taskDesc, props.taskName, timerOn]"]