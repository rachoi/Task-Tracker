{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport AppBar from \"./AppBar.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Table from './Table';\nconst style = {\n  width: '100%',\n  maxWidth: 360,\n  bgcolor: 'background.paper'\n};\nconst url = \"http://localhost:5000\";\n\nfunction ResponsiveDrawer(props) {\n  _s();\n\n  const mountedRef = useRef(true);\n  const [user, setUser] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n  const [list, setList] = React.useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    //get user info\n    // console.log(loading);\n    axios.get(`${url}/auth`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.data) {\n        setUser(res.data);\n        setList(res.data.completedTasks); // console.log(\"loading is false\");\n\n        console.log(\"set user to \" + JSON.stringify(res.data));\n        setLoading(false);\n      } else {\n        navigate(\"/\");\n      }\n    }).catch(err => {\n      // not needed\n      console.log(err);\n      setLoading(false);\n    });\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const revealOverlay = e => {\n    // console.log(list);\n    // console.log(list.length);\n    // for(let i = 0; i < list.length; i++) {\n    //   console.log(list[i]);\n    // }\n    const task = {\n      name: \"example task\",\n      description: \"example desc\",\n      elapsedTime: \"hh:mm:ss\",\n      date: \"yy:mm:dd\"\n    };\n    axios.post(`${url}/add`, task, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status >= 200 && res.status <= 299) {\n        console.log(res.data);\n        console.log(\"posted\");\n        window.location.reload(false);\n      }\n    }).catch(error => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  };\n\n  const handleSubmit = e => {};\n\n  if (!loading) {}\n}\n\n_s(ResponsiveDrawer, \"CoD88yKVyrmCz7WQR4JKCckN45U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ResponsiveDrawer;\nexport default ResponsiveDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveDrawer\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js"],"names":["AppBar","React","useEffect","useRef","axios","useNavigate","AddIcon","Button","Typography","List","ListItem","ListItemText","Divider","DeleteIcon","Table","style","width","maxWidth","bgcolor","url","ResponsiveDrawer","props","mountedRef","user","setUser","useState","loading","setLoading","list","setList","navigate","get","withCredentials","then","res","data","completedTasks","console","log","JSON","stringify","catch","err","current","revealOverlay","e","task","name","description","elapsedTime","date","post","status","window","location","reload","error","handleSubmit"],"mappings":"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","sourcesContent":["import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Table from './Table';\n\nconst style = {\n  width: '100%',\n  maxWidth: 360,\n  bgcolor: 'background.paper',\n};\n\n\nconst url = \"http://localhost:5000\";\n\n\nfunction ResponsiveDrawer(props) {\n\n    const mountedRef = useRef(true);\n    const [user, setUser] = React.useState({});\n    const [loading, setLoading] = React.useState(true);\n    const [list, setList] = React.useState([]);\n    const navigate = useNavigate();\n    useEffect( () => {\n      //get user info\n      // console.log(loading);\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          setUser(res.data);\n          setList(res.data.completedTasks);\n          // console.log(\"loading is false\");\n          console.log(\"set user to \" + JSON.stringify(res.data));\n\n          setLoading(false);\n        }\n        else{\n            navigate(\"/\");\n        }\n      }).catch((err) => {\n        // not needed\n        console.log(err);\n        setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n\n  const revealOverlay = (e) => {\n    // console.log(list);\n    // console.log(list.length);\n    // for(let i = 0; i < list.length; i++) {\n    //   console.log(list[i]);\n    // }\n    const task = {\n      name: \"example task\",\n      description: \"example desc\",\n      elapsedTime: \"hh:mm:ss\",\n      date: \"yy:mm:dd\"\n    }\n    axios.post(`${url}/add`, task, {withCredentials: true}).then(\n      res => {\n        if(res.status >= 200 && res.status <= 299) {\n          console.log(res.data);\n          console.log(\"posted\");\n          window.location.reload(false);\n        }\n      }\n    ).catch((error) => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  }\n\n  const handleSubmit = e => { \n\n  }    \n  \n  if(!loading) {\n\n  }\n  \n}\n  \n  export default ResponsiveDrawer;"]},"metadata":{},"sourceType":"module"}