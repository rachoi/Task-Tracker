{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from \"./AppBar.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000\";\nconst navigate = useNavigate();\n\nfunction ResponsiveDrawer(props) {\n  _s();\n\n  const mountedRef = useRef(true);\n  const [user, setUser] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n  useEffect(() => {\n    //get user info\n    console.log(loading);\n    axios.get(`${url}/auth`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.data) {\n        console.log(res.data);\n        setUser(res.data);\n        console.log(\"loading is false\");\n        console.log(\"set user to \" + JSON.stringify(res.data));\n        setLoading(false);\n      } else {\n        navigate(\"/\");\n      }\n    }).catch(err => {\n      // not needed\n      console.log(err);\n      setLoading(false);\n    });\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      isLoggedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", JSON.stringify(user), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ResponsiveDrawer, \"ILPSChDIXvua4wlNcGiEe93rII8=\");\n\n_c = ResponsiveDrawer;\nexport default ResponsiveDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveDrawer\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js"],"names":["AppBar","React","useEffect","useRef","axios","useNavigate","url","navigate","ResponsiveDrawer","props","mountedRef","user","setUser","useState","loading","setLoading","console","log","get","withCredentials","then","res","data","JSON","stringify","catch","err","current"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAEA,SAASG,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE7B,QAAMC,UAAU,GAAGP,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACY,QAAN,CAAe,IAAf,CAA9B;AAEAX,EAAAA,SAAS,CAAE,MAAM;AACf;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAV,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEZ,GAAI,OAAjB,EAAyB;AAACa,MAAAA,eAAe,EAAE;AAAlB,KAAzB,EAAkDC,IAAlD,CAAuDC,GAAG,IAAG;AAC3D,UAAGA,GAAG,CAACC,IAAP,EAAa;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,IAAhB;AACAV,QAAAA,OAAO,CAACS,GAAG,CAACC,IAAL,CAAP;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBM,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACC,IAAnB,CAA7B;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAND,MAOI;AACAR,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACF,KAXD,EAWGkB,KAXH,CAWUC,GAAD,IAAS;AAChB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAfD;AAgBA,WAAO,MAAM;AACXL,MAAAA,UAAU,CAACiB,OAAX,GAAqB,KAArB;AACD,KAFD;AAID,GAvBQ,EAuBP,EAvBO,CAAT;AAyBF,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAMJ,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMD;;GArCQH,gB;;KAAAA,gB;AAuCP,eAAeA,gBAAf","sourcesContent":["import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst url = \"http://localhost:5000\";\n\nconst navigate = useNavigate();\n\nfunction ResponsiveDrawer(props) {\n\n    const mountedRef = useRef(true);\n    const [user, setUser] = React.useState({});\n    const [loading, setLoading] = React.useState(true);\n    \n    useEffect( () => {\n      //get user info\n      console.log(loading);\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          console.log(res.data);\n          setUser(res.data);\n          console.log(\"loading is false\");\n          console.log(\"set user to \" + JSON.stringify(res.data));\n          setLoading(false);\n        }\n        else{\n            navigate(\"/\");\n        }\n      }).catch((err) => {\n        // not needed\n        console.log(err);\n        setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n    \n  return (\n      <div>\n          <AppBar isLoggedIn={true}/> \n          <h1> {JSON.stringify(user)} </h1>\n      </div>\n    )   \n}\n  \n  export default ResponsiveDrawer;"]},"metadata":{},"sourceType":"module"}