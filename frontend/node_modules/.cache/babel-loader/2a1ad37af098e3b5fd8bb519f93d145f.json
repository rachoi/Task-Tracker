{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from \"./AppBar.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: '100%',\n  maxWidth: 360,\n  bgcolor: 'background.paper'\n};\nconst url = \"http://localhost:5000\";\n\nfunction ResponsiveDrawer(props) {\n  _s();\n\n  const mountedRef = useRef(true);\n  const [user, setUser] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n  const [list, setList] = React.useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    //get user info\n    // console.log(loading);\n    axios.get(`${url}/auth`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.data) {\n        setUser(res.data);\n        setList(res.data.completedTasks); // console.log(\"loading is false\");\n\n        console.log(\"set user to \" + JSON.stringify(res.data));\n        setLoading(false);\n      } else {\n        navigate(\"/\");\n      }\n    }).catch(err => {\n      // not needed\n      console.log(err);\n      setLoading(false);\n    });\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const revealOverlay = e => {\n    console.log(list);\n    console.log(list.length);\n\n    for (let i = 0; i < list.length; i++) {\n      console.log(list[i]);\n    }\n  };\n\n  const handleSubmit = e => {}; // {user.completedTasks.map((task) => {\n  //   const text = `Task name: ${task.name}`\n  //   return (\n  //     <ListItem>\n  //       {/* <Typography component=\"h1\" variant=\"h6\"sx={{margin:\"10px 0px\"}}>\n  //       </Typography> */}\n  //       <ListItemText primary={text}/>\n  //     </ListItem>\n  //   )\n  // })}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      isLoggedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"90px\",\n          width: \"90%\",\n          borderRadius: \"10px\",\n          marginTop: \"20px\",\n          boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: revealOverlay,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"90%\",\n          marginTop: \"20px\",\n          boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          sx: {\n            margin: \"20px 0px\"\n          },\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          component: \"nav\",\n          \"aria-label\": \"mailbox folders\",\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: \"fdsfsd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), list.map(task => {\n            const text = `Task name: ${task.name}`;\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ResponsiveDrawer, \"CoD88yKVyrmCz7WQR4JKCckN45U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ResponsiveDrawer;\nexport default ResponsiveDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveDrawer\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js"],"names":["AppBar","React","useEffect","useRef","axios","useNavigate","AddIcon","Button","Typography","Container","List","ListItem","ListItemText","Divider","style","width","maxWidth","bgcolor","url","ResponsiveDrawer","props","mountedRef","user","setUser","useState","loading","setLoading","list","setList","navigate","get","withCredentials","then","res","data","completedTasks","console","log","JSON","stringify","catch","err","current","revealOverlay","e","length","i","handleSubmit","display","justifyContent","alignItems","height","borderRadius","marginTop","boxShadow","flexDirection","margin","map","task","text","name"],"mappings":"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","sourcesContent":["import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\n\nconst style = {\n  width: '100%',\n  maxWidth: 360,\n  bgcolor: 'background.paper',\n};\n\n\nconst url = \"http://localhost:5000\";\n\n\nfunction ResponsiveDrawer(props) {\n\n    const mountedRef = useRef(true);\n    const [user, setUser] = React.useState({});\n    const [loading, setLoading] = React.useState(true);\n    const [list, setList] = React.useState([]);\n    const navigate = useNavigate();\n    useEffect( () => {\n      //get user info\n      // console.log(loading);\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          setUser(res.data);\n          setList(res.data.completedTasks);\n          // console.log(\"loading is false\");\n          console.log(\"set user to \" + JSON.stringify(res.data));\n\n          setLoading(false);\n        }\n        else{\n            navigate(\"/\");\n        }\n      }).catch((err) => {\n        // not needed\n        console.log(err);\n        setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n\n  const revealOverlay = (e) => {\n    console.log(list);\n    console.log(list.length);\n    for(let i = 0; i < list.length; i++) {\n      console.log(list[i]);\n    }\n  }\n\n  const handleSubmit = e => { \n\n  }\n\n  // {user.completedTasks.map((task) => {\n  //   const text = `Task name: ${task.name}`\n  //   return (\n  //     <ListItem>\n  //       {/* <Typography component=\"h1\" variant=\"h6\"sx={{margin:\"10px 0px\"}}>\n          \n\n  //       </Typography> */}\n  //       <ListItemText primary={text}/>\n\n  //     </ListItem>\n  //   )\n  // })}\n\n    \n    \n  return (\n      <div>\n          <AppBar isLoggedIn={true}/> \n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"90px\", width:\"90%\", borderRadius: \"10px\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              <Button onClick={revealOverlay}>           \n                <AddIcon/>\n              </Button>\n            </div>\n          </div>\n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width:\"90%\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              <Typography component=\"h1\" variant=\"h5\"sx={{margin:\"20px 0px\"}}>\n                Completed Tasks\n              </Typography>\n              <Divider/>\n              <List component=\"nav\" aria-label=\"mailbox folders\">\n                <ListItem>\n                  fdsfsd\n                </ListItem>\n                {list.map((task) => {\n                  const text = `Task name: ${task.name}`\n                  return (\n                    <ListItem>\n                      {/* <Typography component=\"h1\" variant=\"h6\"sx={{margin:\"10px 0px\"}}>\n                        \n\n                      </Typography> */}\n                      <ListItemText primary={text}/>\n\n                    </ListItem>\n                  )\n                })}\n                \n              </List>\n            </div>\n          </div>\n      </div>\n    )   \n}\n  \n  export default ResponsiveDrawer;"]},"metadata":{},"sourceType":"module"}