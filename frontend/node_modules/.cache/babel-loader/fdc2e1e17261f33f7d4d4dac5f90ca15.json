{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from \"./AppBar.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000\";\n\nfunction ResponsiveDrawer(props) {\n  _s();\n\n  const mountedRef = useRef(true); // const [loading, setLoading] = React.useState(true);\n\n  const [list, setList] = React.useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    //get user info\n    axios.get(`${url}/auth`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.data) {\n        setList(res.data.completedTasks); // console.log(\"Set list to: \" + JSON.stringify(res.data.completedTasks));\n        // console.log(\"set user to \" + JSON.stringify(res.data));\n        // setLoading(false);\n      } else {\n        navigate(\"/\");\n      }\n    }).catch(err => {\n      console.log(err); // setLoading(false);\n    });\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const addTask = e => {\n    const task = {\n      name: \"example task\",\n      description: \"example desc\",\n      elapsedTime: \"hh:mm:ss\",\n      date: \"yy:mm:dd\"\n    };\n    axios.post(`${url}/add`, task, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status >= 200 && res.status <= 299) {\n        console.log(res.data);\n        console.log(\"posted\");\n        window.location.reload(false);\n      }\n    }).catch(error => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  };\n\n  const handleSubmit = e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      isLoggedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"90px\",\n          width: \"90%\",\n          borderRadius: \"10px\",\n          marginTop: \"20px\",\n          boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addTask,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"90%\",\n          marginTop: \"20px\",\n          boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          sx: {\n            margin: \"20px 0px\"\n          },\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          list: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ResponsiveDrawer, \"Kba8YxXjCDmgwgV2gHhI7WV1K6g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ResponsiveDrawer;\nexport default ResponsiveDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveDrawer\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js"],"names":["AppBar","React","useEffect","useRef","axios","useNavigate","AddIcon","Button","Typography","Divider","Table","url","ResponsiveDrawer","props","mountedRef","list","setList","useState","navigate","get","withCredentials","then","res","data","completedTasks","catch","err","console","log","current","addTask","e","task","name","description","elapsedTime","date","post","status","window","location","reload","error","handleSubmit","display","justifyContent","alignItems","height","width","borderRadius","marginTop","boxShadow","flexDirection","margin"],"mappings":"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","sourcesContent":["import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Table from './Table';\n\n\nconst url = \"http://localhost:5000\";\n\n\nfunction ResponsiveDrawer(props) {\n\n    const mountedRef = useRef(true);\n    // const [loading, setLoading] = React.useState(true);\n    const [list, setList] = React.useState([]);\n    const navigate = useNavigate();\n    useEffect( () => {\n      //get user info\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          setList(res.data.completedTasks);\n          // console.log(\"Set list to: \" + JSON.stringify(res.data.completedTasks));\n          // console.log(\"set user to \" + JSON.stringify(res.data));\n\n          // setLoading(false);\n        }\n        else{\n            navigate(\"/\");\n        }\n      }).catch((err) => {\n        console.log(err);\n        // setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n\n  const addTask = (e) => {\n    const task = {\n      name: \"example task\",\n      description: \"example desc\",\n      elapsedTime: \"hh:mm:ss\",\n      date: \"yy:mm:dd\"\n    }\n    axios.post(`${url}/add`, task, {withCredentials: true}).then(\n      res => {\n        if(res.status >= 200 && res.status <= 299) {\n          console.log(res.data);\n          console.log(\"posted\");\n          window.location.reload(false);\n        }\n      }\n    ).catch((error) => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  }\n\n  const handleSubmit = e => { \n\n  }    \n  \n  return (\n      <div>\n          <AppBar isLoggedIn={true}/> \n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"90px\", width:\"90%\", borderRadius: \"10px\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              <Button onClick={addTask}>           \n                <AddIcon/>\n              </Button>\n            </div>\n          </div>\n          <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", width:\"90%\", marginTop:\"20px\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\n              <Typography component=\"h1\" variant=\"h5\"sx={{margin:\"20px 0px\"}}>\n                Completed Tasks\n              </Typography>\n              <Divider/>\n              <Table list={list}/>     \n            </div>\n          </div>\n      </div>\n    )   \n}\n  \n  export default ResponsiveDrawer;"]},"metadata":{},"sourceType":"module"}