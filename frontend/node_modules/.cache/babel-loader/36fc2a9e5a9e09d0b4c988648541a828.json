{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task_tracker/frontend/src/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport CircularProgress from '@mui/material/CircularProgress'; // const url = 'https://banking-system-rc.herokuapp.com';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3000'; // const url = 'http://localhost:5000';\n\nexport const ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    user,\n    ...rest\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const mountedRef = useRef(true); // useEffect( () => {\n  //     // Attempting a get request/getting authenticated user \n  //    axios.get(`${url}/auth/user`).then(res => {\n  //         if(res.data) {\n  //             // console.log(\"Authentication verified\");\n  //             setIsLoggedIn(true);\n  //             setLoading(true);\n  //         }\n  //         else{\n  //             // console.log(\"Not authenticated, no response\");\n  //         }\n  //     })\n  //     .catch((error) => {\n  //         console.log(error);\n  //         setLoading(true);\n  //     });\n  //     return () => {\n  //         mountedRef.current = false\n  //     }\n  // }, []); \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => {\n          if (isLoggedIn === true) {\n            return /*#__PURE__*/_jsxDEV(Component, { ...rest,\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 36\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Navigate, {\n              to: {\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 36\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoute, \"v5oKDxgsv6bQwV6b6briOUu0pY0=\");\n\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task_tracker/frontend/src/ProtectedRoute.js"],"names":["React","useState","useEffect","useRef","Route","Navigate","axios","CircularProgress","url","ProtectedRoute","component","Component","user","rest","isLoggedIn","setIsLoggedIn","loading","setLoading","mountedRef","props","pathname","state","from","location","display","justifyContent","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B,C,CAEA;;;AACA,MAAMC,GAAG,GAAG,uBAAZ,C,CACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,IAAxB;AAA8B,OAAGC;AAAjC,GAA0C;AAErE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMiB,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAzB,CALqE,CAOrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;;AAKA,sBACI;AAAA,cAEOa,OAAO,gBAAG;AAAA,6BACN,QAAC,KAAD,OAAWH,IAAX;AAAiB,QAAA,MAAM,EAAIM,KAAD,IAAW;AAChC,cAAGL,UAAU,KAAK,IAAlB,EAAwB;AACpB,gCAAO,QAAC,SAAD,OAAeD,IAAf;AAAA,iBAAyBM;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFD,MAGI;AACA,gCAAO,QAAC,QAAD;AAAU,cAAA,EAAE,EACf;AACIC,gBAAAA,QAAQ,EAAE,GADd;AAEIC,gBAAAA,KAAK,EAAE;AACHC,kBAAAA,IAAI,EAAEH,KAAK,CAACI;AADT;AAFX;AADG;AAAA;AAAA;AAAA;AAAA,oBAAP;AAQH;AACJ;AAdF;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAH,gBAmBN;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAZ;AAAA,6BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AArBR;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA/DM;;GAAMjB,c;;KAAAA,c","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {Route, Navigate} from 'react-router-dom'\nimport axios from 'axios';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n// const url = 'https://banking-system-rc.herokuapp.com';\nconst url = 'http://localhost:3000';\n// const url = 'http://localhost:5000';\n\nexport const ProtectedRoute = ({ component: Component, user, ...rest}) =>{\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const mountedRef = useRef(true);\n\n    // useEffect( () => {\n    //     // Attempting a get request/getting authenticated user \n    //    axios.get(`${url}/auth/user`).then(res => {\n    //         if(res.data) {\n    //             // console.log(\"Authentication verified\");\n    //             setIsLoggedIn(true);\n    //             setLoading(true);\n    //         }\n    //         else{\n    //             // console.log(\"Not authenticated, no response\");\n    //         }\n            \n    //     })\n    //     .catch((error) => {\n    //         console.log(error);\n    //         setLoading(true);\n    //     });\n\n\n    //     return () => {\n    //         mountedRef.current = false\n    //     }\n\n    // }, []); \n    \n\n\n\n    return (\n        <div>\n            {\n               loading ? <div> \n                   <Route {...rest} render={ (props) => {\n                        if(isLoggedIn === true) {\n                            return <Component {...rest} {...props}/>\n                        }\n                        else{\n                            return <Navigate to={\n                                {\n                                    pathname: \"/\",\n                                    state: {\n                                        from: props.location\n                                    }\n                                }\n                            } />\n                        }    \n                    }\n                        \n                    }/>\n                </div> : \n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}> \n                    <CircularProgress/> \n                </div>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}