{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Backdrop.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000\";\nexport default function SimpleBackdrop() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [taskState, setTaskState] = React.useState(false); //false means not started, true means started\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const addTask = e => {\n    const task = {\n      name: \"example task\",\n      description: \"example desc\",\n      elapsedTime: \"hh:mm:ss\",\n      date: \"yy:mm:dd\"\n    };\n    axios.post(`${url}/add`, task, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status >= 200 && res.status <= 299) {\n        console.log(res.data);\n        console.log(\"posted\");\n        window.location.reload(false);\n      }\n    }).catch(error => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleToggle,\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: '#fff',\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: open,\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          width: \"50%\",\n          height: \"90%\",\n          backgroundColor: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          sx: {\n            color: \"black\"\n          },\n          children: \"Create task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: \" 00:00:00 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"name\",\n            label: \"Task name\",\n            name: \"name\",\n            autoComplete: \"name\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"desciption\",\n            label: \"Desciption\",\n            type: \"desciption\",\n            id: \"desciption\",\n            autoComplete: \"task-desciption\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), taskState ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleBackdrop, \"EWWOhglWbgsatrFh8TfIdkHieMo=\");\n\n_c = SimpleBackdrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleBackdrop\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/Backdrop.js"],"names":["React","Backdrop","Button","AddIcon","Grid","Box","TextField","Typography","axios","url","SimpleBackdrop","open","setOpen","useState","taskState","setTaskState","handleClose","handleToggle","addTask","e","task","name","description","elapsedTime","date","post","withCredentials","then","res","status","console","log","data","window","location","reload","catch","error","color","zIndex","theme","drawer","display","justifyContent","alignItems","flexDirection","width","height","backgroundColor","mt","mb"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\n\nimport axios from 'axios';\n\n\nconst url = \"http://localhost:5000\";\n\n\nexport default function SimpleBackdrop() {\n  const [open, setOpen] = React.useState(false);\n  const [taskState, setTaskState] = React.useState(false); //false means not started, true means started\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n\n  const addTask = (e) => {\n    const task = {\n      name: \"example task\",\n      description: \"example desc\",\n      elapsedTime: \"hh:mm:ss\",\n      date: \"yy:mm:dd\"\n    }\n    axios.post(`${url}/add`, task, {withCredentials: true}).then(\n      res => {\n        if(res.status >= 200 && res.status <= 299) {\n          console.log(res.data);\n          console.log(\"posted\");\n          window.location.reload(false);\n        }\n      }\n    ).catch((error) => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleToggle}><AddIcon/></Button>\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n        onClick={handleClose}\n      >\n        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection:\"column\", width: \"50%\", height: \"90%\", backgroundColor: \"white\"}}>\n            <Typography component=\"h1\" variant=\"h5\" sx={{color: \"black\"}}>\n                Create task\n            </Typography>\n            <Box> 00:00:00 </Box>\n            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n                \n                <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Task name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                autoFocus\n                />\n                <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"desciption\"\n                label=\"Desciption\"\n                type=\"desciption\"\n                id=\"desciption\"\n                autoComplete=\"task-desciption\"\n                />\n                {taskState ?  \n                    <Button\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    >\n                    Stop\n                    </Button> \n                    : \n                    <Button\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    >\n                    Start\n                    </Button>\n                }\n               \n                <Grid container>\n                <Grid item xs>\n                    {/* <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                    </Link> */}\n                </Grid>\n                <Grid item>\n                    {/* <Link href=\"/register\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                    </Link> */}\n                </Grid>\n                </Grid>\n            </Box>\n        </div>\n      </Backdrop>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}