{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Table.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useEffect } from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(id, name, description, elapsedTime, date) {\n  return {\n    id,\n    name,\n    description,\n    elapsedTime,\n    date\n  };\n}\n\nlet rows = [];\nexport default function BasicTable(props) {\n  _s();\n\n  const [list, setList] = React.useState({});\n  useEffect(() => {\n    // console.log(\"Use effect in table\");\n    if (props.list.length > 0) {\n      // console.log(\"List: \" + props.list);\n      rows = [];\n\n      for (let i = 0; i < props.list.length; i++) {\n        let task = props.list[i];\n        const id = task.id;\n        const name = task.name;\n        const description = task.description;\n        const elapsedTime = task.elapsedTime;\n        const date = task.date; // console.log(name);\n        // console.log(description);\n        // console.log(elapsedTime);\n        // console.log(date);\n\n        rows.push(createData(id, name, description, elapsedTime, date));\n      }\n    }\n\n    setList(props.list);\n  }, [props.list]);\n\n  const deleteOnClick = e => {\n    e.preventDefault();\n    console.log(\"Deleting\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Elapsed Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Time Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Time Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            scope: \"string\",\n            align: \"left\",\n            children: row.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            scope: \"string\",\n            align: \"right\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            scope: \"string\",\n            align: \"right\",\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            scope: \"string\",\n            align: \"right\",\n            children: row.elapsedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            scope: \"string\",\n            align: \"right\",\n            children: row.startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            scope: \"string\",\n            align: \"right\",\n            children: row.endTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            scope: \"string\",\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                onClick: deleteOnClick,\n                sx: {\n                  color: 'black'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"zYLCCgpsn7v5isI5vRtMGb6KwGc=\");\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/Table.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useEffect","DeleteIcon","Button","createData","id","name","description","elapsedTime","date","rows","BasicTable","props","list","setList","useState","length","i","task","push","deleteOnClick","e","preventDefault","console","log","minWidth","map","row","border","startTime","endTime","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport {useEffect} from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\n\n\n\nfunction createData(id, name, description, elapsedTime, date) {\n  return { id, name, description, elapsedTime, date };\n}\n\nlet rows = [\n];\n\nexport default function BasicTable(props) {\n    const [list, setList] = React.useState({});\n\n    useEffect( () => {\n        // console.log(\"Use effect in table\");\n        if(props.list.length > 0) {\n            // console.log(\"List: \" + props.list);\n            rows = [];\n            for(let i = 0; i < props.list.length; i++) {\n                let task = props.list[i];\n                const id = task.id;\n                const name = task.name;\n                const description = task.description;\n                const elapsedTime = task.elapsedTime;\n                const date = task.date;\n                // console.log(name);\n                // console.log(description);\n                // console.log(elapsedTime);\n                // console.log(date);\n                rows.push(createData(id, name, description, elapsedTime, date));\n            }\n        }\n        setList(props.list);\n    },[props.list]);\n\n    const deleteOnClick = e => {\n      e.preventDefault();\n      console.log(\"Deleting\");\n    }\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell align=\"right\">Task Name</TableCell>\n            <TableCell align=\"right\">Description</TableCell>\n            <TableCell align=\"right\">Elapsed Time</TableCell>\n            <TableCell align=\"right\">Time Started</TableCell>\n            <TableCell align=\"right\">Time Completed</TableCell>\n            <TableCell align=\"right\"></TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell scope=\"string\" align=\"left\">\n                {row.id}\n              </TableCell>\n              <TableCell scope=\"string\" align=\"right\">\n                {row.name}\n              </TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.description}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.elapsedTime}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.startTime}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">{row.endTime}</TableCell>\n              <TableCell scope=\"string\" align=\"right\">\n                  <Button>\n                    <DeleteIcon onClick={deleteOnClick} sx={{color: 'black'}}/>\n                  </Button>\n                  \n              </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}