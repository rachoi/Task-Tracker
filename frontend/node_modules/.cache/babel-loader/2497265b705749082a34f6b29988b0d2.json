{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Components/AppBar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000\";\nexport default function ButtonAppBar(props) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    setIsLoggedIn(props.isLoggedIn);\n  }, [props]); // const logout = (e) => {\n  //   axios.delete(`${url}/logout`, {withCredentials: true}).then(\n  //     res => {\n  //       if(res.status >= 200 && res.status <= 299) {\n  //         // console.log(\"logged out\");\n  //         navigate(\"/\");\n  //       }\n  //     }\n  //   ).catch((error) => {\n  //     // setError(\"error logging out\");\n  //     console.log(error);\n  //   });\n  // }\n  // const get = (e) => {\n  //   axios.get(`${url}/auth`, {withCredentials: true}).then(\n  //     res => {\n  //       if(res.status >= 200 && res.status <= 299) {\n  //         console.log(res.data);\n  //         console.log(\"got\");\n  //       }\n  //     }\n  //   ).catch((error) => {\n  //     // setError(\"error logging out\");\n  //     console.log(error);\n  //   });\n  // }\n\n  const loginOnclick = e => {\n    navigate(\"/login\");\n  };\n\n  const redirectHome = e => {\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: redirectHome,\n            sx: {\n              color: \"black\",\n              fontSize: \"20px\"\n            },\n            children: \"Task Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: logout,\n          sx: {\n            textDecoration: 'none',\n            color: \"black\"\n          },\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loginOnclick,\n          color: \"inherit\",\n          sx: {\n            textDecoration: 'none',\n            color: \"black\"\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ButtonAppBar, \"tZjKBYzH75FZfSbdM5V5Ypc2gBE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ButtonAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonAppBar\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/AppBar.js"],"names":["React","useEffect","AppBar","Box","Toolbar","Typography","Button","axios","useNavigate","url","ButtonAppBar","props","isLoggedIn","setIsLoggedIn","useState","navigate","loginOnclick","e","redirectHome","flexGrow","backgroundColor","color","fontSize","logout","textDecoration"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAGA,MAAMC,GAAG,GAAG,uBAAZ;AAIA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAK,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAnC;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAP,EAAAA,SAAS,CAAE,MAAM;AACbY,IAAAA,aAAa,CAACF,KAAK,CAACC,UAAP,CAAb;AACH,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT,CAJ0C,CAQ1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAGD,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEI,MAAAA,QAAQ,EAAE;AAAZ,KAAT;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,EAAE,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAA9B;AAAA,6BACE,QAAC,OAAD;AAAA,gCAGE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAyC,UAAA,EAAE,EAAE;AAAED,YAAAA,QAAQ,EAAE;AAAZ,WAA7C;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAED,YAAjB;AAA+B,YAAA,EAAE,EAAE;AAACG,cAAAA,KAAK,EAAE,OAAR;AAAiBC,cAAAA,QAAQ,EAAE;AAA3B,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHF,EAcGV,UAAU,gBAAG,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEW,MAAjC;AAAyC,UAAA,EAAE,EAAE;AAACC,YAAAA,cAAc,EAAE,MAAjB;AAAyBH,YAAAA,KAAK,EAAE;AAAhC,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBACT,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEL,YAAjB;AAA+B,UAAA,KAAK,EAAC,SAArC;AAA+C,UAAA,EAAE,EAAE;AAACQ,YAAAA,cAAc,EAAE,MAAjB;AAAyBH,YAAAA,KAAK,EAAE;AAAhC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAxEuBX,Y;UAELF,W;;;KAFKE,Y","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst url = \"http://localhost:5000\";\n\n\n\nexport default function ButtonAppBar(props) {\n  const[isLoggedIn, setIsLoggedIn] = React.useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect( () => {\n      setIsLoggedIn(props.isLoggedIn);\n  }, [props])\n\n  // const logout = (e) => {\n  //   axios.delete(`${url}/logout`, {withCredentials: true}).then(\n  //     res => {\n  //       if(res.status >= 200 && res.status <= 299) {\n  //         // console.log(\"logged out\");\n  //         navigate(\"/\");\n  //       }\n  //     }\n  //   ).catch((error) => {\n  //     // setError(\"error logging out\");\n  //     console.log(error);\n  //   });\n  // }\n\n  // const get = (e) => {\n  //   axios.get(`${url}/auth`, {withCredentials: true}).then(\n  //     res => {\n  //       if(res.status >= 200 && res.status <= 299) {\n  //         console.log(res.data);\n  //         console.log(\"got\");\n  //       }\n  //     }\n  //   ).catch((error) => {\n  //     // setError(\"error logging out\");\n  //     console.log(error);\n  //   });\n  // }\n\n  const loginOnclick = e => {\n    navigate(\"/login\");\n  }\n\n  const redirectHome = e => {\n    navigate(\"/\");\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" sx={{backgroundColor: \"white\"}}>\n        <Toolbar>\n          \n          \n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Button onClick={redirectHome} sx={{color: \"black\", fontSize: \"20px\"}}> \n                Task Tracker\n              </Button>\n            </Typography>\n          \n\n          {/* <Button color=\"inherit\" onClick={get} sx={{textDecoration: 'none', color: \"black\"}}>get</Button>\n\n          <Button color=\"inherit\" onClick={logout} sx={{textDecoration: 'none', color: \"black\"}}>Log out</Button> */}\n\n          {isLoggedIn ? <Button color=\"inherit\" onClick={logout} sx={{textDecoration: 'none', color: \"black\"}}>Log out</Button> : \n            <Button onClick={loginOnclick} color=\"inherit\" sx={{textDecoration: 'none', color: \"black\"}}>Login</Button>\n          }\n          \n          \n          \n          \n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}