{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Pages/DashboardPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Dashboard from \"../Components/Dashboard.js\"; //props needed for pages that require redirection with push\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardPage = props => {\n  _s();\n\n  const [user, setUser] = useState({}); //   const url = 'https://banking-system-rc.herokuapp.com';\n  // const url = 'http://localhost:3000';\n\n  const url = 'http://localhost:5000';\n  useEffect(() => {\n    // axios.get(`${url}/auth/user`)\n    // .then(res => {\n    //   if(res.data) {\n    //     // User received, authenticated\n    //     setUser(res.data);\n    //   }\n    //   else{\n    //     // No user found\n    //     props.history.push(\"/\");\n    //   }\n    // })\n    // .catch((error) => {\n    //   console.log(error);\n    // });\n    setUser(props.user);\n  }, [props.history]); //empty array at the end makes it only run on mount and unmount \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardPage, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Pages/DashboardPage.js"],"names":["axios","React","useState","useEffect","Dashboard","DashboardPage","props","user","setUser","url","history"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAD+B,CAGjC;AACE;;AACA,QAAMO,GAAG,GAAG,uBAAZ;AAEAN,EAAAA,SAAS,CAAE,MAAM;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAK,IAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACD,GAjBQ,EAiBN,CAACD,KAAK,CAACI,OAAP,CAjBM,CAAT,CAP+B,CAwBV;;AAErB,sBACE;AAAA,2BAGE,QAAC,SAAD,OAAeJ,KAAf;AAAsB,MAAA,IAAI,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjCD;;GAAMF,a;;KAAAA,a;AAmCN,eAAeA,aAAf","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport Dashboard from \"../Components/Dashboard.js\";\n\n//props needed for pages that require redirection with push\nconst DashboardPage = (props) => {\n  const [user, setUser] = useState({});\n\n//   const url = 'https://banking-system-rc.herokuapp.com';\n  // const url = 'http://localhost:3000';\n  const url = 'http://localhost:5000';\n\n  useEffect( () => {\n\n    // axios.get(`${url}/auth/user`)\n    // .then(res => {\n    //   if(res.data) {\n    //     // User received, authenticated\n    //     setUser(res.data);\n    //   }\n    //   else{\n    //     // No user found\n    //     props.history.push(\"/\");\n    //   }\n    // })\n    // .catch((error) => {\n    //   console.log(error);\n    // });\n    setUser(props.user);\n  }, [props.history]); //empty array at the end makes it only run on mount and unmount \n\n  return (\n    <div> \n      {/* When rendered we are logged in, \n      and we pass down user retrieved from our get request */}\n      <Dashboard {...props} user={user}/>\n    </div> \n  );\n}\n\nexport default DashboardPage;"]},"metadata":{},"sourceType":"module"}