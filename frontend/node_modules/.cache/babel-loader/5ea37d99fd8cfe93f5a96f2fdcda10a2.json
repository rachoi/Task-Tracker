{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/StopWatch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './StopWatch.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000\";\n\nconst StopWatch = props => {\n  _s();\n\n  const [time, setTime] = React.useState(0);\n  const [timerOn, setTimerOn] = React.useState(false);\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [taskDesc, setTaskDesc] = React.useState(\"\");\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n  React.useEffect(() => {\n    let interval = null;\n    setTaskName(props.taskName);\n    setTaskDesc(props.taskDesc);\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else if (!timerOn) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  const handleSubmit = e => {\n    const task = {\n      name: taskName,\n      description: taskDesc,\n      elapsedTime: time,\n      startTime: startTime,\n      endTime: endTime\n    };\n    console.log(time);\n    axios.post(`${url}/add`, task, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status >= 200 && res.status <= 299) {\n        console.log(res.data);\n        console.log(\"posted\"); //   handleClose();\n\n        window.location.reload(false);\n      }\n    }).catch(error => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n    setTime(0);\n  };\n\n  const handleStart = e => {\n    setTimerOn(true);\n    setStartTime(new Date().toLocaleString());\n  };\n\n  const handleStop = e => {\n    setTimerOn(false);\n    setEndTime(new Date().toLocaleString());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Timers\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stopwatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 60000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 1000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (\"0\" + time / 10 % 100).slice(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [!timerOn && time === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"rgb(51, 153, 255)\"\n        },\n        onClick: handleStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), timerOn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), !timerOn && time > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"rgb(51, 153, 255)\"\n        },\n        onClick: () => setTimerOn(true),\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), !timerOn && time > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(0),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), !timerOn && time > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"rgb(102, 255, 178)\",\n          marginTop: \"10px\"\n        },\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StopWatch, \"xOrBVdbLIv9ejZ1VVMq4v3nUj6s=\");\n\n_c = StopWatch;\nexport default StopWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StopWatch\");","map":{"version":3,"sources":["/Users/raymond/Desktop/Task-Tracker/frontend/src/Components/StopWatch.js"],"names":["React","axios","url","StopWatch","props","time","setTime","useState","timerOn","setTimerOn","taskName","setTaskName","taskDesc","setTaskDesc","startTime","setStartTime","endTime","setEndTime","useEffect","interval","setInterval","prevTime","clearInterval","handleSubmit","e","task","name","description","elapsedTime","console","log","post","withCredentials","then","res","status","data","window","location","reload","catch","error","handleStart","Date","toLocaleString","handleStop","Math","floor","slice","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './StopWatch.css'\n\nimport axios from 'axios';\nconst url = \"http://localhost:5000\";\n\nconst StopWatch = (props) => {\n  const [time, setTime] = React.useState(0);\n  const [timerOn, setTimerOn] = React.useState(false);\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [taskDesc, setTaskDesc] = React.useState(\"\");\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n\n\n\n  React.useEffect(() => {\n    let interval = null;\n    setTaskName(props.taskName);\n    setTaskDesc(props.taskDesc);\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n    } else if (!timerOn) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  const handleSubmit = (e) => {\n    const task = {\n      name: taskName,\n      description: taskDesc,\n      elapsedTime: time,\n      startTime: startTime,\n      endTime: endTime\n    }\n    console.log(time);\n    axios.post(`${url}/add`, task, {withCredentials: true}).then(\n      res => {\n        if(res.status >= 200 && res.status <= 299) {\n          console.log(res.data);\n          console.log(\"posted\");\n        //   handleClose();\n          window.location.reload(false);\n        }\n      }\n    ).catch((error) => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n\n    setTime(0);\n  }\n\n  const handleStart = e => {\n      setTimerOn(true);\n      setStartTime(new Date().toLocaleString());\n  }\n\n  const handleStop = e => {\n        setTimerOn(false);\n        setEndTime(new Date().toLocaleString());\n  }\n\n  return (\n    <div className=\"Timers\">\n      <h2>Stopwatch</h2>\n      <div id=\"display\">\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n      </div>\n\n      <div id=\"buttons\">\n        {!timerOn && time === 0 && (\n          <button style={{backgroundColor: \"rgb(51, 153, 255)\"}} onClick={handleStart}>Start</button>\n        )}\n\n        {timerOn && <button onClick={handleStop}>Stop</button>}\n\n        {!timerOn && time > 0 && (\n          <button style={{backgroundColor: \"rgb(51, 153, 255)\"}} onClick={() => setTimerOn(true)}>Resume</button>\n        )}\n        {!timerOn && time > 0 && (\n          <button onClick={() => setTime(0)}>Reset</button>\n        )}\n        {!timerOn && time > 0 && (\n          <button style={{backgroundColor: \"rgb(102, 255, 178)\", marginTop: \"10px\"}} onClick={handleSubmit}>Submit</button>\n        )}\n        \n      </div>\n    </div>\n  );\n};\n\nexport default StopWatch;"]},"metadata":{},"sourceType":"module"}