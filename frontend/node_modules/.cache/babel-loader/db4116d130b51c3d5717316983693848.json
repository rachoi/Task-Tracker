{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from \"./AppBar.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResponsiveDrawer(props) {\n  _s();\n\n  const mountedRef = useRef(true);\n  const [user, setUser] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    //get user info\n    console.log(loading);\n    axios.get(`${url}/auth`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.data) {\n        console.log(res.data);\n        setUser(res.data);\n        console.log(\"loading is false\");\n        console.log(\"set user to \" + JSON.stringify(res.data));\n        setLoading(false);\n      } else {\n        navigate(\"/\");\n      }\n    }).catch(err => {\n      // not needed\n      console.log(err);\n      setLoading(false);\n    });\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      isLoggedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", JSON.stringify(user), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" sdfsdfds \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ResponsiveDrawer, \"paB+KDxxegXoPkxPvqeJmpUxROE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ResponsiveDrawer;\nexport default ResponsiveDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveDrawer\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/Dashboard.js"],"names":["AppBar","React","useEffect","useRef","axios","useNavigate","ResponsiveDrawer","props","mountedRef","user","setUser","useState","loading","setLoading","navigate","console","log","get","url","withCredentials","then","res","data","JSON","stringify","catch","err","current"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE7B,QAAMC,UAAU,GAAGL,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACU,QAAN,CAAe,IAAf,CAA9B;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAE,MAAM;AACf;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAR,IAAAA,KAAK,CAACa,GAAN,CAAW,GAAEC,GAAI,OAAjB,EAAyB;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAzB,EAAkDC,IAAlD,CAAuDC,GAAG,IAAG;AAC3D,UAAGA,GAAG,CAACC,IAAP,EAAa;AACXP,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB;AACAZ,QAAAA,OAAO,CAACW,GAAG,CAACC,IAAL,CAAP;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBO,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACC,IAAnB,CAA7B;AACAT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAND,MAOI;AACAC,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACF,KAXD,EAWGW,KAXH,CAWUC,GAAD,IAAS;AAChB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAfD;AAgBA,WAAO,MAAM;AACXL,MAAAA,UAAU,CAACmB,OAAX,GAAqB,KAArB;AACD,KAFD;AAID,GAvBQ,EAuBP,EAvBO,CAAT;AAyBF,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAMJ,IAAI,CAACC,SAAL,CAAef,IAAf,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD;;GAtCQH,gB;UAKYD,W;;;KALZC,gB;AAwCP,eAAeA,gBAAf","sourcesContent":["import AppBar from \"./AppBar.js\";  \nimport React, {useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction ResponsiveDrawer(props) {\n\n    const mountedRef = useRef(true);\n    const [user, setUser] = React.useState({});\n    const [loading, setLoading] = React.useState(true);\n    const navigate = useNavigate();\n    useEffect( () => {\n      //get user info\n      console.log(loading);\n      axios.get(`${url}/auth`, {withCredentials: true}).then(res=> {\n        if(res.data) {\n          console.log(res.data);\n          setUser(res.data);\n          console.log(\"loading is false\");\n          console.log(\"set user to \" + JSON.stringify(res.data));\n          setLoading(false);\n        }\n        else{\n            navigate(\"/\");\n        }\n      }).catch((err) => {\n        // not needed\n        console.log(err);\n        setLoading(false);\n      })\n      return () => {\n        mountedRef.current = false;\n      }\n      \n    },[]);\n    \n  return (\n      <div>\n          <AppBar isLoggedIn={true}/> \n          <h1> {JSON.stringify(user)} </h1>\n          <h1> sdfsdfds </h1>\n      </div>\n    )   \n}\n  \n  export default ResponsiveDrawer;"]},"metadata":{},"sourceType":"module"}