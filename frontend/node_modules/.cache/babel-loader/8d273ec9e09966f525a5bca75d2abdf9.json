{"ast":null,"code":"var _jsxFileName = \"/Users/raymond/Desktop/task-tracker/frontend/src/Components/Backdrop.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst moment = require('moment');\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:5000\";\nexport default function SimpleBackdrop() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [taskState, setTaskState] = React.useState(false); //false means not started, true means started\n\n  const [curTask, setCurTask] = React.useState({});\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [taskDesc, setTaskDesc] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n\n  const onChangeTaskName = e => {\n    e.preventDefault();\n    const name = e.target.value;\n    setTaskName(name);\n  };\n\n  const onChangeTaskDesc = e => {\n    e.preventDefault();\n    const desc = e.target.value;\n    setTaskName(desc);\n  };\n\n  const reset = () => {\n    setError(\"\");\n    setCurTask({});\n    setTaskName(\"\");\n    setTaskDesc(\"\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    reset();\n  };\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const startTrack = e => {\n    if (taskName.length === 0) {\n      setError(\"Required to put a name for the task\");\n    } else {\n      if (startTime) {\n        setError(\"Already started\");\n        return;\n      }\n\n      setTaskState(true);\n      start = new Date();\n      setStartTime(start); // const task = {\n      //     name: taskName,\n      //     description: taskDesc,\n      // }\n      // setCurTask(task);\n    }\n  };\n\n  const stopTrack = e => {\n    setTaskState(false);\n    end = new Date();\n    const diff = moment(endTime.diff(startTime)).format(\"hh:mm:ss\");\n    console.log(diff);\n    setEndTime(end);\n  }; //reset values after adding\n\n\n  const addTask = e => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = mm + '/' + dd + '/' + yyyy; // \n\n    const task = {\n      name: taskName,\n      description: taskDesc,\n      elapsedTime: \"hh:mm:ss\",\n      date: today\n    };\n    axios.post(`${url}/add`, task, {\n      withCredentials: true\n    }).then(res => {\n      if (res.status >= 200 && res.status <= 299) {\n        console.log(res.data);\n        console.log(\"posted\");\n        window.location.reload(false);\n      }\n    }).catch(error => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleToggle,\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: '#fff',\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          height: \"90%\",\n          backgroundColor: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            sx: {\n              color: \"black\"\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 70\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            sx: {\n              color: \"black\"\n            },\n            children: \"Create task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            sx: {\n              color: \"red\"\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              label: \"Task name\",\n              name: \"name\",\n              autoComplete: \"name\",\n              onChange: onChangeTaskName,\n              value: taskName,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              name: \"desciption\",\n              label: \"Desciption\",\n              type: \"desciption\",\n              id: \"desciption\",\n              autoComplete: \"task-desciption\",\n              value: taskDesc,\n              onChange: onChangeTaskDesc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), taskState ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-end\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  mt: 3,\n                  mb: 2\n                },\n                onClick: stopTrack,\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-end\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  mt: 3,\n                  mb: 2\n                },\n                onClick: startTrack,\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  marginLeft: \"15px\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleBackdrop, \"guh2XOxS9A8imEzkNTErpF7F6BY=\");\n\n_c = SimpleBackdrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleBackdrop\");","map":{"version":3,"sources":["/Users/raymond/Desktop/task-tracker/frontend/src/Components/Backdrop.js"],"names":["React","Backdrop","Button","AddIcon","Grid","Box","CloseIcon","TextField","Typography","moment","require","axios","url","SimpleBackdrop","open","setOpen","useState","taskState","setTaskState","curTask","setCurTask","taskName","setTaskName","taskDesc","setTaskDesc","error","setError","startTime","setStartTime","endTime","setEndTime","onChangeTaskName","e","preventDefault","name","target","value","onChangeTaskDesc","desc","reset","handleClose","handleToggle","startTrack","length","start","Date","stopTrack","end","diff","format","console","log","addTask","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","task","description","elapsedTime","date","post","withCredentials","then","res","status","data","window","location","reload","catch","color","zIndex","theme","drawer","width","height","backgroundColor","display","justifyContent","alignItems","flexDirection","mt","mb","marginLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nconst moment = require('moment');\n\n\n\nimport axios from 'axios';\n\n\nconst url = \"http://localhost:5000\";\n\n\nexport default function SimpleBackdrop() {\n  const [open, setOpen] = React.useState(false);\n  const [taskState, setTaskState] = React.useState(false); //false means not started, true means started\n  const [curTask, setCurTask] = React.useState({});\n  const [taskName, setTaskName] = React.useState(\"\");\n  const [taskDesc, setTaskDesc] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n\n  const [startTime, setStartTime] = React.useState(\"\");\n  const [endTime, setEndTime] = React.useState(\"\");\n\n  const onChangeTaskName = e => {\n    e.preventDefault();\n    const name = e.target.value;\n    setTaskName(name)\n  }\n\n  const onChangeTaskDesc = e => {\n    e.preventDefault();\n    const desc = e.target.value;\n    setTaskName(desc)\n  }\n\n  const reset = () => {\n      setError(\"\");\n      setCurTask({});\n      setTaskName(\"\");\n      setTaskDesc(\"\");\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n    reset();\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  const startTrack = (e) => {\n    if(taskName.length === 0) {\n        setError(\"Required to put a name for the task\");\n    }\n    else {\n        if(startTime) {\n            setError(\"Already started\");\n            return;\n        }\n        setTaskState(true);\n        start = new Date();\n        setStartTime(start);\n        // const task = {\n        //     name: taskName,\n        //     description: taskDesc,\n        // }\n        // setCurTask(task);\n    }\n\n  }\n\n  const stopTrack = (e) => {\n    setTaskState(false);\n    end = new Date();\n    const diff = moment(endTime.diff(startTime)).format(\"hh:mm:ss\");\n    console.log(diff);\n    setEndTime(end);\n  }\n//reset values after adding\n\n  const addTask = (e) => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    today = mm + '/' + dd + '/' + yyyy;\n\n// \n    const task = {\n      name: taskName,\n      description: taskDesc,\n      elapsedTime: \"hh:mm:ss\",\n      date: today\n    }\n    axios.post(`${url}/add`, task, {withCredentials: true}).then(\n      res => {\n        if(res.status >= 200 && res.status <= 299) {\n          console.log(res.data);\n          console.log(\"posted\");\n          window.location.reload(false);\n        }\n      }\n    ).catch((error) => {\n      // setError(\"error logging out\");\n      console.log(error);\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleToggle}><AddIcon/></Button>\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <div  style={{width: \"50%\", height: \"90%\", backgroundColor: \"white\"}}>\n\n            <div style={{display: \"flex\", justifyContent:\"flex-end\"}}>\n                <Button onClick={handleClose} sx={{color: \"black\"}}> <CloseIcon/> </Button>\n            </div>\n\n            <div style={{display: \"flex\", alignItems: \"center\", flexDirection:\"column\"}}> \n                <Typography component=\"h1\" variant=\"h5\" sx={{color: \"black\"}}>\n                    Create task\n                </Typography>\n                <Typography component=\"h1\" variant=\"h5\" sx={{color: \"red\"}}>\n                    {error}\n                </Typography>\n                <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n                    \n                    <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Task name\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    onChange={onChangeTaskName}\n                    value={taskName}\n                    autoFocus\n                    />\n                    <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    name=\"desciption\"\n                    label=\"Desciption\"\n                    type=\"desciption\"\n                    id=\"desciption\"\n                    autoComplete=\"task-desciption\"\n                    value={taskDesc}\n                    onChange={onChangeTaskDesc}\n                    />\n                    {taskState ?  \n                        <div style={{display: \"flex\", justifyContent:\"flex-end\"}}>\n                            <Button\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 }}\n                                onClick={stopTrack}\n                                >\n                                Stop\n                            </Button> \n                            \n                        </div>\n                        : \n                        <div style={{display: \"flex\", justifyContent:\"flex-end\"}}>\n                            <Button\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 }}\n                                onClick={startTrack}\n                                >\n                                Start\n                            </Button>\n\n                            <Button\n                                variant=\"contained\"\n                                sx={{ mt: 3, mb: 2 , marginLeft: \"15px\"}}\n                                \n                                >\n                                Submit\n                            </Button> \n                        </div>\n                        \n                    }\n                \n                    <Grid container>\n                    <Grid item xs>\n                        {/* <Link href=\"#\" variant=\"body2\">\n                        Forgot password?\n                        </Link> */}\n                    </Grid>\n                    <Grid item>\n                        {/* <Link href=\"/register\" variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                        </Link> */}\n                    </Grid>\n                    </Grid>\n                </Box>\n            </div>\n        </div>\n      </Backdrop>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}